name: 'Terraform Replace Provider'
description: 'Runs terraform state replace-provider using old and new provider locations.'
inputs:
  ssh_key:
    description: '[secret] [required] GitHub SSH Key for pulling repo.'
    required: true
  terraform_version:
    description: '[decimal] [required] (e.g. 1.0.11) Terraform version to use.'
    required: true
  tf_workspace:
    description: '[string] (i.e. ninja/prod-east) TF Workspace to create if tf_create_workspace input = true.'
    required: true
  old_provider:
    description: "[old_provider] [required] (e.g. hashicorp/github) Name of the provider to replace."
    required: true
  new_provider:
    description: "[new_provider] [required] (e.g. integrations/github). Name of the provider to replace [old_provider] with."
    required: true

runs:
  using: "composite"
  steps:
    - name: Validate Inputs
      env:
        SSH_KEY: ${{ inputs.ssh_key }}
        TERRAFORM_VERSION: ${{ inputs.terraform_version }}
        OLD_PROVIDER: ${{ inputs.old_provider }}
        NEW_PROVIDER: ${{ inputs.new_provider }}
      run: |
        cd ${{ github.action_path }}
        source ../shell-scripts/input-validator.sh

        declare -A inputs
        inputs[terraform_version]="$TERRAFORM_VERSION"
        inputs[tf_workspace]="$TF_WORKSPACE"
        inputs[old_provider]="$OLD_PROVIDER"
        inputs[new_provider]="$NEW_PROVIDER"

        validateInput inputs
      shell: bash
    - name: Install SSH Key
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ inputs.ssh_key }}
    - name: Pull
      uses: actions/checkout@v2
    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v1.2.1
      with:
        terraform_version: ${{ inputs.terraform_version }}
    - name: Initialize Terraform
      run: |
        terraform version
        terraform init -lock=false -input=false
      shell: bash
    - name: List Terraform providers (pre-replace)
      run: |
        terraform providers
      shell: bash
    - name: Replace provider
      run: |
        terraform state replace-provider -auto-approve ${{ inputs.old_provider }} ${{ inputs.new_provider }}
      shell: bash
    - name: List Terraform providers (post-replace)
      run: |
        terraform providers
      shell: bash
